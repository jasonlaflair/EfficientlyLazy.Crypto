<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Gallio.Loader</name>
  </assembly>
  <members>
    <member name="T:Gallio.Loader.GallioLoader">
      <summary>
            The Gallio loader provides access to installed Gallio assemblies so that we can reference
            them even if they are not copied locally.
            </summary>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.AddHintDirectory(System.String)">
      <summary>
            Adds a hint directory to the assembly resolver.
            </summary>
      <param name="path">The path of the hint directory to add.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path" /> is null.</exception>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.CreateRemoteEnvironment">
      <summary>
            Creates a private AppDomain that Gallio can reside in.
            </summary>
      <returns>The remote environment.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown if Gallio does not appear to be installed.</exception>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.GetDefaultRuntimePath">
      <summary>
            Gets the runtime path that will be used by default by the loader.
            </summary>
      <returns>The installed runtime path.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown if Gallio does not appear to be installed.</exception>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.Initialize">
      <summary>
            Initializes the Gallio loader (if not already initialized) and returns
            its singleton reference.
            </summary>
      <returns>The loader.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown if Gallio does not appear to be installed.</exception>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.Initialize(System.String)">
      <summary>
            Initializes the Gallio loader (if not already initialized) and returns
            its singleton reference.
            </summary>
      <param name="runtimePath">The runtime path from which to load Gallio,
            or null to determine it automatically.</param>
      <returns>The loader.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown if Gallio does not appear to be installed.</exception>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.InitializeLifetimeService">
      <summary>
                    Obtains a lifetime service object to control the lifetime policy for this instance.
                </summary>
      <returns>
                    An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.
                </returns>
      <exception cref="T:System.Security.SecurityException">
                    The immediate caller does not have infrastructure permission. 
                </exception>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.InitializeRemote(System.AppDomain)">
      <summary>
            Remotely initializes the Gallio loader (if not already initialized) and returns
            its singleton reference within a foreign AppDomain.
            </summary>
      <param name="appDomain">The AppDomain in which to initialize the loader.</param>
      <returns>The loader.</returns>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="appDomain" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if Gallio does not appear to be installed.</exception>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.InitializeRemote(System.AppDomain,System.String)">
      <summary>
            Remotely initializes the Gallio loader (if not already initialized) and returns
            its singleton reference within a foreign AppDomain.
            </summary>
      <param name="appDomain">The AppDomain in which to initialize the loader.</param>
      <param name="runtimePath">The runtime path from which to load Gallio,
            or null to determine it automatically.</param>
      <returns>The loader.</returns>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="appDomain" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if Gallio does not appear to be installed.</exception>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="P:Gallio.Loader.GallioLoader.Instance">
      <summary>
            Gets the Gallio loader instance, or null if not initialized.
            </summary>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.Resolve``1"></member>
    <member name="M:Gallio.Loader.GallioLoader.Resolve(System.Type)">
      <summary>
            Resolves a runtime service.
            </summary>
      <param name="serviceType">The type of service to resolve.</param>
      <returns>The resolved service.</returns>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="P:Gallio.Loader.GallioLoader.RuntimePath">
      <summary>
            Gets the Gallio runtime path.
            </summary>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="M:Gallio.Loader.GallioLoader.SetupRuntime">
      <summary>
        <para>
            Sets up the runtime with a default runtime setup using the loader's
            runtime path and a null logger.  Does nothing if the runtime has
            already been initialized.
            </para>
        <para>
            If you need more control over this behavior, call RuntimeBootstrap
            yourself.
            </para>
      </summary>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="T:Gallio.Loader.IGallioLoader">
      <summary>
        <para>
            Provides an interface for interacting with the Gallio Loader.
            </para>
      </summary>
    </member>
    <member name="M:Gallio.Loader.IGallioLoader.AddHintDirectory(System.String)">
      <summary>
            Adds a hint directory to the assembly resolver.
            </summary>
      <param name="path">The path of the hint directory to add.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path" /> is null.</exception>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="M:Gallio.Loader.IGallioLoader.Resolve``1">
      <summary>
            Resolves a runtime service.
            </summary>
      <typeparam name="T">The type of service to resolve.</typeparam>
      <returns>The resolved service.</returns>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="M:Gallio.Loader.IGallioLoader.Resolve(System.Type)">
      <summary>
            Resolves a runtime service.
            </summary>
      <param name="serviceType">The type of service to resolve.</param>
      <returns>The resolved service.</returns>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="P:Gallio.Loader.IGallioLoader.RuntimePath">
      <summary>
            Gets the Gallio runtime path.
            </summary>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="M:Gallio.Loader.IGallioLoader.SetupRuntime">
      <summary>
        <para>
            Sets up the runtime with a default runtime setup using the loader's
            runtime path and a null logger.  Does nothing if the runtime has
            already been initialized.
            </para>
        <para>
            If you need more control over this behavior, call RuntimeBootstrap
            yourself.
            </para>
      </summary>
      <exception cref="T:Gallio.Loader.SafeException">Thrown if the operation could not be performed.</exception>
    </member>
    <member name="T:Gallio.Loader.IGallioRemoteEnvironment">
      <summary>
            Provides access to an instance of the Gallio runtime that is running in a foreign AppDomain.
            </summary>
    </member>
    <member name="P:Gallio.Loader.IGallioRemoteEnvironment.AppDomain">
      <summary>
            Gets the remote AppDomain.
            </summary>
      <exception cref="T:System.ObjectDisposedException">Thrown if the remote environment has been disposed.</exception>
    </member>
    <member name="P:Gallio.Loader.IGallioRemoteEnvironment.Loader">
      <summary>
            Gets the remote loader.
            </summary>
      <exception cref="T:System.ObjectDisposedException">Thrown if the remote environment has been disposed.</exception>
    </member>
    <member name="T:Gallio.Loader.SafeException">
      <summary>
        <para>
            An exception that expresses a problem in a manner that may be safely communicated
            across a remote context to a client that may not be able to load the original exception type.
            </para>
        <para>
            Using this type prevents spurious <see cref="T:System.Runtime.Serialization.SerializationException" /> exceptions
            from being thrown due to the server exposing an internal exception type that
            is not accessible to the client.
            </para>
      </summary>
    </member>
    <member name="M:Gallio.Loader.SafeException.#ctor">
      <summary>
            Creates an exception.
            </summary>
    </member>
    <member name="M:Gallio.Loader.SafeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Creates an exception from serialization info.
            </summary>
      <param name="info">The serialization info.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:Gallio.Loader.SafeException.#ctor(System.String)">
      <summary>
            Creates an exception.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Gallio.Loader.SafeException.#ctor(System.String,System.Exception)">
      <summary>
            Creates an exception.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Gallio.Loader.SafeException.Wrap(System.Exception)">
      <summary>
            Wraps an exception as a <see cref="T:Gallio.Loader.SafeException" />.
            </summary>
      <param name="ex">The exception type.</param>
      <returns>The wrapped exception.</returns>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="ex" /> is null.</exception>
    </member>
    <member name="T:Gallio.Loader.VersionPolicy">
      <summary>
            Gets version information for Gallio components.
            </summary>
    </member>
    <member name="M:Gallio.Loader.VersionPolicy.GetVersionLabel(System.Reflection.Assembly)">
      <summary>
            Gets a version label of a Gallio component assembly for display purposes.
            </summary>
      <param name="assembly">The assembly.</param>
      <returns>The version label.</returns>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="assembly" /> is null.</exception>
    </member>
    <member name="M:Gallio.Loader.VersionPolicy.GetVersionLabel(System.Version)">
      <summary>
            Generates a version label from a version number for display purposes.
            </summary>
      <param name="version">The version to transform into a label.</param>
      <returns>The version label.</returns>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="version" /> is null.</exception>
    </member>
    <member name="M:Gallio.Loader.VersionPolicy.GetVersionNumber(System.Reflection.Assembly)">
      <summary>
            Gets the version number of an assembly for display purposes.
            </summary>
      <param name="assembly">The assembly.</param>
      <returns>The version number.</returns>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="assembly" /> is null.</exception>
    </member>
  </members>
</doc>