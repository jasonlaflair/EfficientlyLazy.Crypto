<configuration>
  <dduetools>
    <builder>
      <components>

        <!-- Create skeleton document -->
        <component type="Microsoft.Ddue.Tools.CopyFromFileComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <data file="%DXROOT%\Presentation\Prototype\transforms\skeleton.xml" />
          <copy source="/*" target="/" />
        </component>

        <!-- Copy in reflection data -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <index name="reflection" value="/reflection/apis/api" key="@id" cache="10">
            <data base="%DXROOT%\Data\Reflection" recurse="true" files="*.xml" />
            <data files=".\reflection.xml" />
          </index>
          <copy name="reflection" source="*" target="/document/reference" />
        </component>

        <!-- Copy in container data -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <copy name="reflection" key="string(/document/reference/containers/namespace/@api)" source="apidata" target="/document/reference/containers/namespace" />
        </component>
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/containers//type/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="reflection" source="apidata|typedata|templates|attributes" target="/document/reference/containers//type[@api=$key]" />
            </component>
          </components>
        </component>

        <!-- Generate syntax -->
        <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <if condition="/document/reference/topicdata/@group='api'" />
          <then>
            <component type="Microsoft.Ddue.Tools.SyntaxComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <syntax input="/document/reference" output="/document/syntax" />
              <generators>
                <generator type="Microsoft.Ddue.Tools.CSharpDeclarationSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
                <generator type="Microsoft.Ddue.Tools.VisualBasicDeclarationSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
                <generator type="Microsoft.Ddue.Tools.CPlusPlusDeclarationSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
                <generator type="Microsoft.Ddue.Tools.JSharpDeclarationSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
              </generators>
            </component>
            <component type="Microsoft.Ddue.Tools.SyntaxComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <syntax input="/document/reference" output="/document/usyntax" />
              <generators>
                <generator type="Microsoft.Ddue.Tools.VisualBasicUsageSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
              </generators>
            </component>
          </then>
        </component>

        <!-- Copy in comments -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
          <index name="comments" value="/doc/members/member" key="@name" cache="100">
            <data base="%DXROOT%\Data\DdueXml" recurse="true" files="*.xml" />
            <data base=".\DdueXml" recurse="true" files="*.xml" />
          </index>
          <copy name="comments" source="*" target="/document/comments" />
        </component>

        <!-- Resolve code snippets -->
        <component type="Microsoft.Ddue.Tools.ExampleComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <examples file="%DXROOT%\Data\CodeSnippet.xml" />
          <colors language="VisualBasic">
            <color pattern="^\s*'[^\r\n]*" class="comment" />
            <color pattern="\&#34;.*\&#34;" class="literal" />
            <color pattern="\b((AddHandler)|(AddressOf)|(As)|(ByRef)|(ByVal)|(Case)|(Catch)|(Class)|(Const)|(Continue)|(Delegate)|(Dim)|(Each)|(Else)|(ElseIf)|(End)|(Enum)|(Event)|(Exit)|(False)|(Finally)|(For)|(Friend)|(Function)|(Get)|(Handles)|(Implements)|(Imports)|(In)|(Inherits)|(Interface)|(Is)|(Loop)|(Me)|(Module)|(MustInherit)|(MustOverride)|(MyBase)|(Namespace)|(New)|(Next)|(Nothing)|(NotInheritable)|(NotOverrideable)|(Of)|(Overloads)|(Overridable)|(Overrides)|(ParamArray)|(Partial)|(Private)|(Property)|(Protected)|(Public)|(RaiseEvent)|(ReadOnly)|(RemoveHandler)|(Set)|(Shadows)|(Shared)|(Static)|(Step)|(Structure)|(Sub)|(Then)|(Throw)|(To)|(True)|(Try)|(Until)|(Using)|(When)|(While)|(With)|(WriteOnly))\b" class="keyword" />
          </colors>
          <colors language="CSharp">
            <color pattern="/\*(.|\n)+?\*/" class="comment" />
            <color pattern="//[^\r\n]*" class="comment" />
            <color pattern="\&#34;.*\&#34;" class="literal" />
            <color pattern="\b((abstract)|(as)|(base)|(bool)|(break)|(case)|(catch)|(class)|(const)|(continue)|(default)|(delegate)|(do)|(else)|(enum)|(event)|(extern)|(false)|(finally)|(for)|(foreach)|(get)|(if)|(in)|(interface)|(internal)|(is)|(namespace)|(new)|(null)|(out)|(override)|(params)|(private)|(protected)|(public)|(readonly)|(ref)|(return)|(sealed)|(set)|(static)|(struct)|(switch)|(this)|(throw)|(true)|(try)|(typeof)|(using)|(virtual)|(volatile)|(void)|(while))\b" class="keyword" />
          </colors>
          <colors language="ManagedCPlusPlus">
            <color pattern="/\*(.|\n)+?\*/" class="comment" />
            <color pattern="//[^\r\n]*" class="comment" />
            <color pattern="\&#34;.*\&#34;" class="literal" />
            <color pattern="\b((abstract)|(array)|(break)|(case)|(catch)|(class)|(const)|(continue)|(delegate)|(delete)|(do)|(else)|(enum)|(event)|(extern)|(false)|(finally)|(for)|(friend)|(gcnew)|(generic)|(goto)|(if)|(initonly)|(inline)|(interface)|(literal)|(namespace)|(new)|(noinline)|(nullptr)|(operator)|(private)|(property)|(protected)|(public)|(ref)|(register)|(return)|(sealed)|(sizeof)|(static)|(struct)|(switch)|(template)|(this)|(throw)|(true)|(try)|(typedef)|(union)|(using)|(value)|(virtual)|(void)|(volatile)|(while))\b" class="keyword" />
          </colors>
        </component>

        <!-- Copy in reflection data and comments for members -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/elements/element/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <if condition="not(/document/reference/elements/element[@api=$key]/*)" />
              <then>
                <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
                  <copy name="reflection" source="*[not(local-name()='elements')]" target="/document/reference/elements/element[@api=$key]" />
                </component>
              </then>
            </component>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
              <copy name="comments" source="ddue:dduexml/ddue:summary|ddue:dduexml/ddue:useBase|ddue:dduexml/ddue:obsoleteCodeEntity|ddue:dduexml/ddue:clsCompliantAlternative|ddue:dduexml/ddue:platformNotes|ddue:dduexml/ddue:internalOnly" target="/document/reference/elements/element[@api=$key]" />
            </component>
          </components>
        </component>

        <!-- resolve tokens -->
        <component type="Microsoft.Ddue.Tools.SharedContentComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
          <content file="%DXROOT%\Presentation\Prototype\content\token_content.xml" />
          <replace elements="/document//ddue:token" item="string(.)" />
        </component>

        <!-- transform -->
        <component type="Microsoft.Ddue.Tools.TransformComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <transform file="%DXROOT%\Presentation\Prototype\transforms\main_reference.xsl">
            <argument key="metadata" value="true" />
            <argument key="languages">
              <language label="CSharp" name="CSharp" style="cs" />
              <language label="VisualBasic" name="VisualBasic" style="vb" />
              <language label="ManagedCPlusPlus" name="ManagedCPlusPlus" style="cs" />
            </argument>
          </transform>
        </component>

        <!-- resolve art links -->
        <component type="Microsoft.Ddue.Tools.ResolveArtLinksComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <targets input="%DXROOT%\Data\ArtStore" output=".\Output\media" link="../media" map="%DXROOT%\Data\ArtSharedContent.loc.xml" />
        </component>

        <!-- resolve shared content -->
        <component type="Microsoft.Ddue.Tools.SharedContentComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <content file="%DXROOT%\Presentation\Prototype\content\shared_content.xml" />
          <content file="%DXROOT%\Presentation\Prototype\content\reference_content.xml" />
          <content file="%DXROOT%\Presentation\Shared\content\syntax_content.xml" />
        </component>

        <!-- resolve conceptual links -->
        <component type="Microsoft.Ddue.Tools.ResolveConceptualLinksComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <targets base="%DXROOT%\Data\XmlComp" type="index"/>
        </component>

        <!-- resolve reference links -->
        <component type="Microsoft.Ddue.Tools.ResolveReferenceLinksComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <targets base="%DXROOT%\Data\Reflection" recurse="true" files="*.xml" type="index" />
          <targets files=".\reflection.xml" type="local" />
        </component>

	<!-- Write out intellisense -->
     	<component type="Microsoft.Ddue.Tools.IntellisenseComponent2" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <output directory=".\Intellisense" />
	  <expressions root="/html/body/div[@id='main']"
		       assembly="string(p/span[@sdata='assembly'])"	
		       summary="span[@sdata='authoredSummary']"
		       parameters="div[@id='parameters']/div[@class='section']/div[@class='sectionContent']/dl" 
		       parameterContent="dd/span[@sdata='authoredParameterSummary']"	
		       templates="div[@id='genericParameters']/div[@class='section']/div[@class='sectionContent']/dl"
		       templateContent="dd"
		       returns="div[@id='returns']/div[@class='section']/div[@class='sectionContent']/span[@sdata='authoredValueSummary']" 
		       exception="div[@class='section']/div[@class='sectionContent']/table[@class='exceptions']/tr/td[2]"
		       exceptionCref="../td[1]/span[@sdata='cer']"
		       enumeration="div[@id='enumerationSection']/div[@class='section']/div[@class='sectionContent']/table[@class='members']/tr/td[2]"
		       enumerationApi="../td[1]"
		       memberSummary="span[@sdata='memberAuthoredSummary']" /> 
     	</component>

        <!-- save the result -->
        <component type="Microsoft.Ddue.Tools.SaveComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <save base=".\Output\html" path="concat(/html/head/meta[@name='file']/@content,'.htm')" indent="false" omit-xml-declaration="true" />
        </component>

      </components>
    </builder>
  </dduetools>
</configuration>
