<configuration>
  <dduetools>
    <builder>
      <context>
        <namespace prefix="ddue" uri="http://ddue.schemas.microsoft.com/authoring/2003/5" />
      </context>
      <components>

        <!-- Create skeleton document -->
        <component type="Microsoft.Ddue.Tools.CopyFromFileComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <data file="%DXROOT%\Presentation\vs2010\transforms\skeleton.xml" />
          <copy source="/*" target="/" />
        </component>

        <!-- Copy in reflection data -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <index name="reflection" value="/reflection/apis/api" key="@id" cache="10">
            <data files=".\reflection.xml" />
          </index>
          <copy name="reflection" source="*" target="/document/reference" missing-entry="error" missng-source="error" missing-target="error" />
        </component>

        <!-- Copy in container data -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <copy name="reflection" key="string(/document/reference/containers/namespace/@api)" source="*[not(local-name()='elements')]" target="/document/reference/containers/namespace" />
        </component>
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/containers//type/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="reflection" source="topicdata|apidata|typedata|family|templates|attributes" target="/document/reference/containers//type[@api=$key]" missing-entry="error" missing-source="error" missing-target="error" />
            </component>
          </components>
        </component>

        <!-- Copy in type version data on memberlist topics -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <copy name="reflection" key="string(/document/reference/topicdata/@typeTopicId)" source="versions" target="/document/reference/topicdata" />
        </component>

        <!-- Copy in members version data for overload list topics -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <copy name="reflection" key="string(/document/reference[topicdata[@subgroup='overload']]/elements//element/@api)" source="versions" target="/document/reference[topicdata[@subgroup='overload']]/elements//element[@api=$key]" />
        </component>

        <!-- Copy in explicitInterfaceImplemented reflection data -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/implements/member/@api | /document/reference/implements//type/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="reflection" source="apidata" target="/document/reference/implements//*[@api=$key and not(apidata)]" />
              <copy name="reflection" source="templates" target="/document/reference/implements//*[@api=$key and not(apidata) and not(specialization)]" />
            </component>
          </components>
        </component>

        <!-- Copy in parameter data -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/parameters/parameter//type/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="reflection" source="apidata" target="/document/reference/parameters/parameter//type[boolean(@api=$key) and not(apidata)]" />
            </component>
          </components>
        </component>

        <!-- Copy in return type reflection data -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/returns//type/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="reflection" source="apidata|typedata|family|templates|containers|attributes" target="/document/reference/returns//type[@api=$key]" />
            </component>
          </components>
        </component>

        <!-- Copy in event handler type reflection data -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/eventhandler/type/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="reflection" source="apidata|typedata|family|templates|containers|attributes" target="/document/reference/eventhandler/type[@api=$key]" />
            </component>
          </components>
        </component>

        <!-- Generate syntax -->
        <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <if condition="/document/reference/topicdata/@group='api'" />
          <then>
            <component type="Microsoft.Ddue.Tools.SyntaxComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <syntax input="/document/reference" output="/document/syntax" />
              <generators>
                <generator name="VisualBasic" type="Microsoft.Ddue.Tools.VisualBasicDeclarationSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
                <generator name="VisualBasicUsage" type="Microsoft.Ddue.Tools.VisualBasicUsageSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
                <generator name="CSharp" type="Microsoft.Ddue.Tools.CSharpDeclarationSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
                <generator name="ManagedCPlusPlus" type="Microsoft.Ddue.Tools.CPlusPlusDeclarationSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
                <generator name="JSharp" type="Microsoft.Ddue.Tools.JSharpDeclarationSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
                <generator name="JScript" type="Microsoft.Ddue.Tools.JScriptDeclarationSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
                <generator type="Microsoft.Ddue.Tools.XamlUsageSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll">
                  <!-- filter files specify xaml configuration info, e.g. to control the assemblies whose apis get xaml syntax -->
                  <filter files="%DXROOT%\Presentation\shared\configuration\xamlSyntax.config"/>
                </generator>
                <generator type="Microsoft.Ddue.Tools.AspNetSyntaxGenerator" assembly="%DXROOT%\ProductionTools\SyntaxComponents.dll" />
              </generators>
            </component>
          </then>
        </component>

        <!-- Copy in metadata attributes -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
          <index name="metadata" value="/metadata/topic" key="@id">
            <data files=".\SupportFiles\*Metadata.xml" />
          </index>
          <index name="version" value="/metadata/topic" key="@id">
            <data files="Version.xml" />
          </index>
          <copy name="metadata" source="*" target="/document/metadata" missing-target="error" />
          <copy name="metadata" key="string('*')" source="*" target="/document/metadata" missing-target="error" />
          <copy name="version" key="string('*')" source="*" target="/document/metadata" missing-target="error" />
        </component>

        <!-- Copy in metadata project settings -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <index name="projectSettings" value="/*/item" key="@id">
            <data files=".\ExtractedFiles\*projectsettings.xml" />
          </index>
          <copy name="projectSettings" key="string('PBM_FileVersion')" source="." target="/document/metadata" />
        </component>

        <!-- Copy in comments -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
          <index name="comments" value="/doc/members/member" key="@name" cache="100">
            <data base=".\DdueXml" recurse="true" files="*.xml" />
          </index>
          <copy name="comments" source="*" target="/document/comments" missing-target="error" />
        </component>

        <!-- Copy in comments of overidden member -->
        <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <if condition="boolean(/document/comments/ddue:dduexml/ddue:useBase)" />
          <then>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
              <copy name="comments" key="string(/document/reference/overrides/member/@api)" source="ddue:dduexml/ddue:summary|ddue:dduexml/ddue:parameters|ddue:dduexml/ddue:returnValue" target="/document/comments/ddue:dduexml" />
            </component>
          </then>
        </component>

        <!-- Copy in comments of parent topics for inherited overload topics -->
        <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <if condition="boolean(/document/reference/topicdata/@parentTopicId)" />
          <then>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
              <copy name="comments" key="string(/document/reference/topicdata/@parentTopicId)" source="*" target="/document/comments" />
            </component>
          </then>
        </component>

        <!-- Copy in HowDoI tasks -->
        <component type="Microsoft.Ddue.Tools.TaskGrabberComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5"/>
          <keywords topic="/metadata/topic[keyword[@index='B']]" keyword="keyword[@index='B']" files=".\SupportFiles\HowDoIKeywords\*.xml"/>
          <source value="/topic/ddue:developerHowToDocument" key="../@id">
            <data files=".\SupportFiles\HowDoIData\*.xml"/>
          </source>
          <copy source="ddue:title|ddue:introduction|ddue:codeExample" target="/document/comments/ddue:dduexml/ddue:codeExamples/ddue:codeExample/ddue:legacy/ddue:content/ddue:codeReference[starts-with(.,'HOWDOI#')]"/>
        </component>

        <!-- Resolve code snippets -->
        <component type="Microsoft.Ddue.Tools.ExampleComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <examples file="%DXROOT%\Data\CodeSnippet.xml" />
          <colors language="VisualBasic">
            <color pattern="^\s*'[^\r\n]*" class="comment" />
            <color pattern="\&#34;[^&#34;\r\n]*\&#34;" class="literal" />
            <color pattern="\b((AddHandler)|(AddressOf)|(Alias)|(And)|(AndAlso)|(As)|(Boolean)|(ByRef)|(Byte)|(ByVal)|(Call)|(Case)|(Catch)|(CBool)|(CByte)|(CChar)|(CDate)|(CDec)|(CDbl)|(Char)|(CInt)|(Class)|(CLng)|(CObj)|(Const)|(Continue)|(CSByte)|(CShort)|(CSng)|(CStr)|(CType)|(CUInt)|(CULng)|(CUShort)|(Date)|(Decimal)|(Declare)|(Default)|(Delegate)|(Dim)|(DirectCast)|(Do)|(Double)|(Each)|(Else)|(ElseIf)|(End)|(EndIf)|(Enum)|(Erase)|(Error)|(Event)|(Exit)|(False)|(Finally)|(For)|(Friend)|(From)|(Function)|(Get)|(GetType)|(GetXMLNamespace)|(Global)|(GoSub)|(GoTo)|(Handles)|(If)|(Implements)|(Imports)|(In)|(Inherits)|(Integer)|(Interface)|(Is)|(IsNot)|(Let)|(Lib)|(Like)|(Long)|(Loop)|(Me)|(Mod)|(Module)|(MustInherit)|(MustOverride)|(MyBase)|(MyClass)|(Namespace)|(Narrowing)|(New)|(Next)|(Not)|(Nothing)|(NotInheritable)|(NotOverridable)|(Object)|(Of)|(On)|(Operator)|(Option)|(Optional)|(Or)|(OrElse)|(Overloads)|(Overridable)|(Overrides)|(ParamArray)|(Partial)|(Private)|(Property)|(Protected)|(Public)|(RaiseEvent)|(ReadOnly)|(ReDim)|(REM)|(RemoveHandler)|(Resume)|(Return)|(SByte)|(Select)|(Set)|(Shadows)|(Shared)|(Short)|(Single)|(Static)|(Step)|(Stop)|(String)|(Structure)|(Sub)|(SyncLock)|(Then)|(Throw)|(To)|(True)|(Try)|(TryCast)|(TypeOf)|(Variant)|(Wend)|(UInteger)|(ULong)|(UShort)|(Until)|(Using)|(When)|(Where)|(While)|(Widening)|(With)|(WithEvents)|(WriteOnly)|(Xor)|(#Const)|(#Else)|(#ElseIf)|(#End)|(#If))\b" class="keyword" />
          </colors>
          <colors language="CSharp">
            <color pattern="/\*(.|\n)+?\*/" class="comment" />
            <color pattern="\&#34;[^&#34;\r\n]*\&#34;" class="literal" />
            <color pattern="//[^\r\n]*" class="comment" />
            <color pattern="\b((abstract)|(as)|(ascending)|(base)|(bool)|(break)|(by)|(byte)|(case)|(catch)|(char)|(checked)|(class)|(const)|(continue)|(decimal)|(default)|(delegate)|(descending)|(do)|(double)|(else)|(enum)|(equals)|(event)|(explicit)|(extern)|(false)|(finally)|(fixed)|(float)|(for)|(foreach)|(from)|(get)|(goto)|(group)|(if)|(implicit)|(in)|(int)|(interface)|(internal)|(into)|(is)|(join)|(let)|(lock)|(long)|(namespace)|(new)|(null)|(object)|(operator)|(on)|(orderby)|(out)|(override)|(params)|(partial)|(private)|(protected)|(public)|(readonly)|(ref)|(return)|(sbyte)|(sealed)|(select)|(set)|(short)|(sizeof)|(stackalloc)|(static)|(string)|(struct)|(switch)|(this)|(throw)|(true)|(try)|(typeof)|(uint)|(ulong)|(unchecked)|(unsafe)|(ushort)|(using)|(value)|(var)|(vield)|(virtual)|(volatile)|(void)|(where)|(while))\b" class="keyword" />
          </colors>
          <colors language="ManagedCPlusPlus">
            <color pattern="/\*(.|\n)+?\*/" class="comment" />
            <color pattern="\&#34;[^&#34;\r\n]*\&#34;" class="literal" />
            <color pattern="//[^\r\n]*" class="comment" />
            <color pattern="\b((abstract)|(array)|(bool)|(break)|(case)|(catch)|(char)|(class)|(const)|(continue)|(default)|(delegate)|(delete)|(deprecated)|(dllexport)|(dllimport)|(do)|(double)|(else)|(enum)|(event)|(explicit)|(extern)|(false)|(finally)|(float)|(for)|(friend)|(gcnew)|(generic)|(goto)|(if)|(initonly)|(inline)|(int)|(interface)|(literal)|(long)|(mutable)|(naked)|(namespace)|(new)|(noinline)|(noreturn)|(nothrow)|(novtable)|(nullptr)|(operator)|(private)|(property)|(protected)|(public)|(ref)|(register)|(return)|(safecast)|(sealed)|(selectany)|(short)|(signed)|(sizeof)|(static)|(struct)|(switch)|(template)|(this)|(thread)|(throw)|(true)|(try)|(typedef)|(typeid)|(typename)|(union)|(unsigned)|(using)|(uuid)|(value)|(virtual)|(void)|(volatile)|(while))\b" class="keyword" />
          </colors>
        </component>

        <!-- Copy in reflection data and comments for members -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/elements//element/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <if condition="not(/document/reference/elements//element[@api=$key]/apidata)" />
              <then>
                <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
                  <copy name="reflection" source="*[not(self::elements)]" target="/document/reference/elements//element[@api=$key]" missing-entry="error" missing-source="error" missing-target="error" />
                </component>
              </then>
            </component>
            <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <if condition="boolean(/document/reference/elements//element[@api=$key]/topicdata/@parentTopicId)" />
              <then>
                <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
                  <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
                  <copy name="comments" key="string(/document/reference/elements//element[@api=$key]/topicdata/@parentTopicId)" source="ddue:dduexml/ddue:summary|ddue:dduexml/ddue:useBase|ddue:dduexml/ddue:obsoleteCodeEntity|ddue:dduexml/ddue:clsCompliantAlternative|ddue:dduexml/ddue:platformNotes|ddue:dduexml/ddue:internalOnly" target="/document/reference/elements//element[@api=$key]" />
                </component>
              </then>
            </component>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
              <copy name="comments" source="ddue:dduexml/ddue:summary|ddue:dduexml/ddue:useBase|ddue:dduexml/ddue:obsoleteCodeEntity|ddue:dduexml/ddue:clsCompliantAlternative|ddue:dduexml/ddue:platformNotes|ddue:dduexml/ddue:internalOnly" target="/document/reference/elements//element[@api=$key]" missing-target="error" />
            </component>
            <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <if condition="boolean(/document/reference/elements//element[@api=$key]/ddue:useBase)" />
              <then>
                <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
                  <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
                  <copy name="comments" key="string(/document/reference/elements//element[@api=$key]/overrides/member/@api)" source="ddue:dduexml/ddue:summary" target="/document/reference/elements//element[@api=$key]" />
                </component>
              </then>
            </component>
          </components>
        </component>

        <!-- Add platforms data -->
        <component type="Microsoft.Ddue.Tools.PlatformsComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <!-- The order of filter files in this config determines the order of platforms in the output. -->
          <filter files=".\SupportFiles\Platforms\WinVista.xml"/>
          <filter files=".\SupportFiles\Platforms\WinXP.xml"/>
          <filter files=".\SupportFiles\Platforms\WinXpMediaCenter.xml"/>
          <filter files=".\SupportFiles\Platforms\WinXPPro64.xml"/>
          <filter files=".\SupportFiles\Platforms\WinXPSE.xml"/>
          <filter files=".\SupportFiles\Platforms\WinSvr2003.xml"/>
          <filter files=".\SupportFiles\Platforms\WinSvr2000.xml"/>
          <filter files=".\SupportFiles\Platforms\WinME.xml"/>
          <filter files=".\SupportFiles\Platforms\Win98.xml"/>
          <filter files=".\SupportFiles\Platforms\WindowsCE.xml"/>
          <filter files=".\SupportFiles\Platforms\SmartPhone.xml"/>
          <filter files=".\SupportFiles\Platforms\PocketPC.xml"/>
          <filter files=".\SupportFiles\Platforms\Xbox360.xml"/>
        </component>

        <!-- Copy in comments for a member list topic's declaring type. -->
        <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <if condition="boolean(/document/reference/topicdata[@group='list' and @subgroup!='overload'])" />
          <then>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
              <copy name="comments" key="string(/document/reference/topicdata[@group='list' and @subgroup!='overload']/@typeTopicId)"
                    source="ddue:dduexml/ddue:summary|ddue:dduexml/ddue:useBase|ddue:dduexml/ddue:obsoleteCodeEntity|ddue:dduexml/ddue:clsCompliantAlternative|ddue:dduexml/ddue:platformNotes|ddue:dduexml/ddue:internalOnly"
                    target="/document/reference/containers" />
            </component>
          </then>
        </component>

        <!-- Copy in comments for a member's declaring type. -->
        <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <if condition="boolean((/document/reference/topicdata[@group='list' and @subgroup='overload']) | (/document/reference/apidata[@group='member']))" />
          <then>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
              <copy name="comments" key="string(/document/reference/containers/type/@api)"
                    source="ddue:dduexml/ddue:summary|ddue:dduexml/ddue:useBase|ddue:dduexml/ddue:obsoleteCodeEntity|ddue:dduexml/ddue:clsCompliantAlternative|ddue:dduexml/ddue:platformNotes|ddue:dduexml/ddue:internalOnly"
                    target="/document/reference/containers" />
            </component>
          </then>
        </component>

        <!-- resolve tokens -->
        <component type="Microsoft.Ddue.Tools.SharedContentComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
          <content file="%DXROOT%\Data\tokens.xml" />
          <replace elements="/document//ddue:token" item="string(.)" />
        </component>

        <!-- Copy in topicTypes -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
          <context prefix="xlink" name="http://www.w3.org/1999/xlink" />
          <variable expression="/document/comments/ddue:relatedTopics/*/@xlink:href" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
              <context prefix="xlink" name="http://www.w3.org/1999/xlink" />
              <index name="topicType" value="/metadata/topic" key="@id">
                <data base="%DXROOT%\Data\ContentMetadata" recurse="true" files="*.contentmetadata.xml" />
              </index>
              <copy name="topicType" source="topicType" target="/document/comments/ddue:relatedTopics/*[@xlink:href='{0}' and not(@topicType_id)]" attribute="true" ignoreCase="true" missing-target="error" />
            </component>
          </components>
        </component>

        <!-- transform -->
        <component type="Microsoft.Ddue.Tools.TransformComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <transform file="%DXROOT%\Presentation\vs2010\transforms\main_reference.xsl">
            <argument key="metadata" value="true" />
            <argument key="languages">
              <language label="VisualBasic" name="VisualBasic" style="vb" />
              <language label="CSharp" name="CSharp" style="cs" />
              <language label="ManagedCPlusPlus" name="ManagedCPlusPlus" style="cpp" />
              <language label="JSharp" name="JSharp" style="cs" />
              <language label="JScript" name="JScript" style="cs" />
            </argument>
            <argument key="omitAptcaBoilerplate" value="false" />
            <argument key="RTMReleaseDate" value="June 2007" />
          </transform>
        </component>

        <!-- resolve art links -->
        <component type="Microsoft.Ddue.Tools.ResolveArtLinksComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <targets input="%DXROOT%\Data\ArtStore" baseOutput=".\Output" outputPath="media" link="../media" map="%DXROOT%\Data\ArtSharedContent.loc.xml" />
        </component>

        <!-- resolve shared content -->
        <component type="Microsoft.Ddue.Tools.SharedContentComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <content file="%DXROOT%\Presentation\vs2010\content\shared_content.xml" />
          <content file="%DXROOT%\Presentation\vs2010\content\feedBack_content.xml" />
          <content file="%DXROOT%\Presentation\vs2010\content\reference_content.xml" />
          <content file="%DXROOT%\Presentation\shared\content\syntax_content.xml" />
        </component>

        <!-- resolve conceptual links -->
        <component type="Microsoft.Ddue.Tools.ResolveConceptualLinksComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <targets base="%DXROOT%\Data\XmlComp" type="index"/>
        </component>

        <!-- resolve reference links -->
        <component type="Microsoft.Ddue.Tools.ResolveReferenceLinksComponent2" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <targets files=".\reflection.xml" type="local" />
        </component>
        <!--
        <component type="Microsoft.Ddue.Tools.DisplayComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <xpath>/</xpath>
        </component>
        -->

        <!-- Write out intellisense -->
        <component type="Microsoft.Ddue.Tools.IntellisenseComponent2" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <output directory=".\Intellisense" />
          <expressions root="/html/body/div[@id='mainSection']/div[@id='mainBody']"
                 assembly="string(span[@sdata='assembly'])"
                 summary="span[@sdata='authoredSummary']"
                 parameters="div[@id='syntaxSection']/div[@id='parameters']/dl"
                 parameterContent="dd/span[@sdata='authoredParameterSummary']"
                 templates="div[@id='syntaxSection']/div[@id='genericParameters']/dl"
                 templateContent="dd"
                 returns="div[@id='syntaxSection']/div[@id='returns']/span[@sdata='authoredValueSummary']"
                 exception="div[@id='ddueExceptionsSection']/div[@class='tableSection']/table/tr/td[2]"
                 exceptionCref="../td[1]/span[@sdata='cer']"
                 enumeration="div[@id='enumerationSection']/div[@id='membersSection']/table[@class='members']/tr/td[3]"
                 enumerationApi="../td[2]"
                 memberSummary="span[@sdata='memberAuthoredSummary']" />
        </component>

        <!-- save the result -->
        <component type="Microsoft.Ddue.Tools.SaveComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <save base=".\Output\html" path="concat(/html/head/meta[@name='file']/@content,'.htm')" link="../html" indent="false" omit-xml-declaration="true" />
        </component>

        <!-- record file creation events -->
        <component type="Microsoft.Ddue.Tools.HxfGeneratorComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll" input="%DXROOT%\Presentation\vs2010\seed.HxF" output="test.HxF" />

      </components>
    </builder>
  </dduetools>
</configuration>
